# This job builds test images and uploads them to the `test-assets` dummy
# release as assets.
#
# It works by looking at the tests/IMAGES file in the repository and checks
# it against all the already-uploaded images.

name: Images

on:
  push:
    branches: [ "master" ]
    paths:
      - 'tests/IMAGES'

concurrency:
  # Ensure only a single instance of this job is run at any time
  group: ${{ github.ref }}

permissions:
  contents: write

jobs:
  build-upload:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    # Copied from https://github.com/systemd/systemd/blob/main/.github/workflows/mkosi.yml
    - uses: systemd/mkosi@e3141cd82206e00e3a6b02c09e08b3d443462063

    - name: Calculate needed images
      id: calculate
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        existing=$(gh release view test_assets --json assets --jq '.[][].name')

        # Begin multiline output parameter
        echo "NEEDED_IMAGES<<MULTILINE_EOF" >> "$GITHUB_OUTPUT"

        echo "$existing" | python3 -c '
        import sys

        # Calculate images that have already been uploaded
        existing = {line.strip() for line in sys.stdin}
        with open("./tests/IMAGES", "r") as f:
            flavors = {line.strip() for line in f if line.strip()}

        # Print to stdout iamges we need to build and upload
        for flavor in flavors:
            name = f"image-{flavor}.raw"
            if name not in existing:
                print(flavor)
        ' | tee -a "$GITHUB_OUTPUT"

        # End multiline output parameter
        echo "MULTILINE_EOF" >> "$GITHUB_OUTPUT"

    - name: Build needed images
      run: |
        while IFS= read -r flavor; do
            echo "Building: ${flavor}"

            outdir=$(mktemp -d)
            cp "./tests/images/mkosi.${flavor}" "$outdir"

            pushd "$outdir"
            sudo mkosi build
            popd

            cp "${outdir}/image.raw" "image-${flavor}.raw"
        done <<< "${{ steps.calculate.outputs.NEEDED_IMAGES }}"

    - name: Upload freshly built images
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        for image in image-*.raw; do
          gh release upload test_assets "$image"
        done
